---
AWSTemplateFormatVersion: 2010-09-09
Description: This template is used as an enabler for CFT development. It creates a Custom Resource that looks up the Availability Zone and then calling it to verify that it works.
Parameters:
  pOrganization:
    Description: The name of the portfolio that identifies its products, applications, and components
    Type: String
    MinLength: 1
    MaxLength: 30
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.catalog.organization }}
  pPortfolio:
    Description: The name of the portfolio that identifies its products, applications, and components
    Type: String
    MinLength: 1
    MaxLength: 15
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.catalog.portfolio }}
  pProduct:
    Description: The name of the product that identifies its applications and components
    Type: String
    MinLength: 1
    MaxLength: 15
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.catalog.product }}
  pApplication:
    Description: The name of the application (or service module) that identifies its components
    Type: String
    MinLength: 1
    MaxLength: 15
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.catalog.application }}
  pComponent:
    Description: The name of the component that aligns with the application or service module
    Type: String
    MinLength: 0
    MaxLength: 15
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.catalog.component }}
  pDepartment:
    Description: The name of the department that owns the resource
    Type: String
    MinLength: 1
    MaxLength: 15
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.catalog.department }}
  pEnvironment:
    Description: 'The name of the environment in which the resource is running (e.g.: sandbox, development, test, production)'
    Type: String
    MinLength: 1
    MaxLength: 15
    AllowedPattern: '[a-zA-Z0-9\-]*'
    Default: ${{ iapp.aws.environment }}
  pSupportEmail:
    Description: The email address of the support team to contact
    Type: String
    MinLength: 8
    MaxLength: 30
    AllowedPattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
    Default: ${{ iapp.catalog.support_email }}
  pReleaseTag:
    Description: 'The name of the release to pull the code from'
    Type: String
    MinLength: 1
    MaxLength: 15
    Default: 'v0.0.1'
  pSourceCodeURL:
    Description: The location where the source code resides
    Type: String 
    Default: ${{ iapp.code.sourcecode_url }}
Resources: 
  rVPCLookupCall:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !ImportValue shared:guardrails:vpc-lookup:arn
      Environment:
        !Ref pEnvironment 
  rAZLookupCall:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !ImportValue shared:guardrails:az-lookup:arn
      RegionName:
        !Ref AWS::Region   
      AZIdx: '2'    
  rSubnetLookupCall:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:
      - rAZLookupCall
      - rVPCLookupCall
    Properties:
      ServiceToken: !ImportValue shared:guardrails:subnet-lookup:arn
      AZ: !GetAtt rAZLookupCall.Name
      VPCId: !GetAtt rVPCLookupCall.Id
      AccessType: 'public'
      ResourceType: 'application'     
  rSGLookupCall:
    Type: AWS::CloudFormation::CustomResource
    DependsOn:
      - rVPCLookupCall
    Properties:
      ServiceToken: !ImportValue shared:guardrails:sg-lookup:arn
      VPCId: !GetAtt rVPCLookupCall.Id
      AccessFor: 'web-access'  
  rAMICall:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !ImportValue shared:guardrails:ami-lookup:arn
      RegionName: !Ref AWS::Region    
      Category: test
      Subcategory: baseline
      CardCatalog:
        Department: !Ref pDepartment
        Organization: !Ref pOrganization
        Portfolio: !Ref pPortfolio
        SupportEmail: !Ref pSupportEmail
        Product: !Ref pProduct
        Environment: !Ref pEnvironment
        Component: !Ref pComponent
        Application: !Ref pApplication 
  rSecurityGroupInstance:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName:
        !Sub "${pOrganization}-${pApplication}-${pEnvironment}-pingpong"
      GroupDescription: Security group for SSH
      VpcId: !GetAtt rVPCLookupCall.Id
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 18.232.223.115/32
      Tags: 
        - 
          Key: "Name"
          Value: 
            !Sub "${pOrganization}-${pApplication}-${pEnvironment}-pingpong"
        - 
          Key: "iapp-portfolio"
          Value: 
            !Ref pPortfolio
        - 
          Key: "iapp-product"
          Value: 
            !Ref pProduct
        - 
          Key: "iapp-application"
          Value: 
            !Ref pApplication
        - 
          Key: "iapp-component"
          Value:
            !Ref pComponent
        - 
          Key: "iapp-department"
          Value:
            !Ref pDepartment
        - 
          Key: "iapp-environment"
          Value:
            !Ref pEnvironment
        - 
          Key: "iapp-support-email"
          Value:
            !Ref pSupportEmail    
        - 
          Key: "iapp-access-type"
          Value: 'public'
        - 
          Key: "iapp-resource-type"
          Value: 'application'  
  rAppInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: S3Assets
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Sid: DescribeVolumes
              Effect: Allow
              Action:
              - ec2:DescribeVolumes
              Resource: '*'
            - Sid: AccessArtifactRepo
              Effect: Allow
              Action:
              - s3:ListBucket
              - s3:GetObject
              Resource:             
              - !ImportValue shared:guardrails:artfact-repository:arn
      Tags: 
        - 
          Key: "Name"
          Value: 
            !Sub "${pOrganization}-${pApplication}-${pEnvironment}-pingpong"
        - 
          Key: "iapp-portfolio"
          Value: 
            !Ref pPortfolio
        - 
          Key: "iapp-product"
          Value: 
            !Ref pProduct
        - 
          Key: "iapp-application"
          Value: 
            !Ref pApplication
        - 
          Key: "iapp-component"
          Value:
            !Ref pComponent
        - 
          Key: "iapp-department"
          Value:
            !Ref pDepartment
        - 
          Key: "iapp-environment"
          Value:
            !Ref pEnvironment
        - 
          Key: "iapp-support-email"
          Value:
            !Ref pSupportEmail    
        - 
          Key: "iapp-access-type"
          Value: 'public'
        - 
          Key: "iapp-resource-type"
          Value: 'application'  
  rAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn:
      - rAppInstanceRole
    Properties:
      Path: /
      Roles:
      - !Ref rAppInstanceRole  
  rAutoScalingConfigApp:
    Type: AWS::AutoScaling::LaunchConfiguration
    DependsOn:
      - rAppInstanceProfile
      - rAMICall
      - rSGLookupCall
      - rSecurityGroupInstance
    Metadata:
      AWS::CloudFormation::Init: 
        configSets: 
          default_install: 
            - install_cfn
            - install_redis
            - install_node
            - install_pingpong
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.rAutoScalingConfigApp.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource rAutoScalingGroupApp --configsets default_install --region ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        install_redis: 
          commands: 
            00_install_redis: 
              command: "sudo yum -y groupinstall 'Development Tools'"
              cwd: "~"
            05_install_redis: 
              command: 'wget http://download.redis.io/redis-stable.tar.gz'
              cwd: "tmp"
            10_install_redis: 
              command: "tar xvzf redis-stable.tar.gz --directory /opt"
              cwd: "tmp"
            15_install_redis: 
              command: "sudo chmod -R 777 redis-stable"
              cwd: "opt"
            20_install_redis: 
              command: "cd redis-stable && make MALLOC=libc"
              cwd: "opt"
          services:
            redis:
              enabled: "true"
              ensureRunning: "true"
              commands:
                start_redis:
                  command: "opt/redis-stable/src/redis-server"
        install_node: 
          commands: 
            05_install_node: 
              command: "curl https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh -o node-install.sh"
              cwd: "tmp"
            10_install_node: 
              command: "bash node-install.sh"
              cwd: "tmp"
            15_install_node:
              command: '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
              env: 
                NVM_DIR: "$HOME/.nvm"
              cwd: "tmp"
            16_install_node: 
              command: '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'
              env: 
                NVM_DIR: "$HOME/.nvm"
              cwd: "tmp"
            20_install_node: 
              command: ". ~/.nvm/nvm.sh"
              env: 
                NVM_DIR: "$HOME/.nvm"
              cwd: "tmp"
            25_install_node: 
              command: "nvm install node"
              env: 
                NVM_DIR: "$HOME/.nvm"
              cwd: "tmp"
        install_pingpong: 
          commands: 
            05_install_pingpong: 
              command: "sudo git clone https://github.com/indatawetrust/realtimepingpong.git /opt/pingpong"
              cwd: "tmp" 
            10_install_pingpong: 
              command: "sudo chmod 777 -R /opt/pingpong"
              cwd: "tmp"
            15_install_pingpong: 
              command: "npm install --save && bower install"
              cwd: "opt/pingpong"
            #20_install_pingpong: 
            #  command: "node ./bin/www"
            #  cwd: "opt/pingpong"
          services:
            pingpong:
              enabled: "true"
              ensureRunning: "true"
              commands:
                start_pingpong:
                  command: "node opt/pingpong/bin/www"  
    Properties:
      ImageId: !GetAtt rAMICall.Id
      IamInstanceProfile: !Ref rAppInstanceProfile
      InstanceType: t2.large
      AssociatePublicIpAddress: true
      BlockDeviceMappings:
      - DeviceName: /dev/sdh
        Ebs:
          VolumeSize: 100
          VolumeType: gp2
          Encrypted: true
      KeyName: iapp-master-sandbox-nonprod
      SecurityGroups:
        - !GetAtt rSGLookupCall.Id
        - !Ref rSecurityGroupInstance
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -x

            yum update -y

            EC2_INSTANCE_ID=$(curl -s http://instance-data/latest/meta-data/instance-id)

            ######################################################################
            # Volume /dev/sdh (which will get created as /dev/xvdh on Amazon Linux)

            DATA_STATE="unknown"
            until [ "${!DATA_STATE}" == "attached" ]; do
              DATA_STATE=$(aws ec2 describe-volumes \
              --region ${AWS::Region} \
              --filters \
                    Name=attachment.instance-id,Values=${!EC2_INSTANCE_ID} \
                    Name=attachment.device,Values=/dev/sdh \
              --query Volumes[].Attachments[].State \
              --output text)

              sleep 5
            done

            # Format /dev/xvdh if it does not contain a partition yet
            if [ "$(file -b -s /dev/xvdh)" == "data" ]; then
              mkfs -t ext4 /dev/xvdh
            fi

            mkdir -p /data
            mount /dev/xvdh /data

            # Persist the volume in /etc/fstab so it gets mounted again
            echo '/dev/xvdh /data ext4 defaults,nofail 0 2' >> /etc/fstab

            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource rAutoScalingConfigApp --configsets default_install --region ${AWS::Region}

            # signal the CreationPolicy that the instance is ready
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource rAutoScalingConfigApp --region ${AWS::Region}       
  rAutoScalingGroupApp:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: 
      - rSubnetLookupCall
      - rAZLookupCall
      - rAutoScalingConfigApp
    CreationPolicy:
      AutoScalingCreationPolicy:     
        MinSuccessfulInstancesPercent: 100
      ResourceSignal:
        Count: 0
        Timeout: "PT5M"    
    Properties:
      AutoScalingGroupName: 
        !Sub "${pOrganization}-${pApplication}-${pEnvironment}-pingpong"
      AvailabilityZones:
      - !GetAtt rAZLookupCall.Name
      VPCZoneIdentifier:
      - !GetAtt rSubnetLookupCall.Id
      LaunchConfigurationName: !Ref rAutoScalingConfigApp
      MinSize: 1
      MaxSize: 1
      DesiredCapacity: 1
      HealthCheckType: EC2
      HealthCheckGracePeriod: 300
      Tags: 
        - 
          Key: "Name"
          Value:
            !Sub "${pOrganization}-${pApplication}-${pEnvironment}-pingpong"
          PropagateAtLaunch: true
        - 
          Key: "iapp-organization"
          Value: 
            !Ref pOrganization
          PropagateAtLaunch: true
        - 
          Key: "iapp-portfolio"
          Value: 
            !Ref pPortfolio
          PropagateAtLaunch: true
        - 
          Key: "iapp-product"
          Value: 
            !Ref pProduct
          PropagateAtLaunch: true
        - 
          Key: "iapp-application"
          Value: 
            !Ref pApplication
          PropagateAtLaunch: true
        - 
          Key: "iapp-component"
          Value:
            !Ref pComponent
          PropagateAtLaunch: true
        - 
          Key: "iapp-department"
          Value:
            !Ref pDepartment
          PropagateAtLaunch: true
        - 
          Key: "iapp-environment"
          Value:
            !Ref pEnvironment
          PropagateAtLaunch: true
        - 
          Key: "iapp-support-email"
          Value:
            !Ref pSupportEmail 
          PropagateAtLaunch: true
Outputs:
  AZLookupCall:
    Description: The value from the custom resource
    Value: !GetAtt rAZLookupCall.Name      
  SubnetLookupCall:
    Description: The value from the custom resource
    Value: !GetAtt rSubnetLookupCall.Id
  VPCLookupCall:
    Description: The value from the custom resource
    Value: !GetAtt rVPCLookupCall.Id  
  SGLookupCall:
    Description: The value from the custom resource
    Value: !GetAtt rSGLookupCall.Id    
  SourceCode:
    Description: The location of the source code for this CFT
    Value: !Ref pSourceCodeURL 